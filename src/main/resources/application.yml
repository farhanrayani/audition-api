spring:
  application:
    name: audition-api
  config:
    import: "optional:configserver:"
  main:
    allow-bean-definition-overriding: true
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
  mvc:
    throw-exception-if-no-handler-found: true
  sleuth:
    sampler:
      probability: 1.0

server:
  max-http-request-header-size: 16KB
  port: 8080
  servlet:
    context-path: /api/v1
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
  error:
    include-stacktrace: never
    include-message: always

# Application-specific configuration
application:
  connection:
    connect-timeout: 5000
    read-timeout: 30000
    write-timeout: 5000
    response-timeout: 30000
  external-apis:
    jsonplaceholder:
      base-url: https://jsonplaceholder.typicode.com
      retry-attempts: 3
      circuit-breaker-enabled: true

# Management and monitoring
management:
  tracing:
    sampling:
      probability: 1.0
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,info,metrics,prometheus # Enable specific endpoints for production
  endpoint:
    health:
      show-details: when-authorized
      show-components: always
      probes:
        enabled: true
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
    tags:
      application: ${spring.application.name}

# Logging configuration
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:-%5p} [%thread] %logger{36} - %msg%n"
  level:
    com.audition: INFO
    org.springframework.web: INFO
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.security: WARN
    org.hibernate: WARN
    io.micrometer: INFO
    brave: WARN

# Production resilience settings
resilience4j:
  circuitbreaker:
    instances:
      jsonPlaceholderService:
        sliding-window-size: 10
        minimum-number-of-calls: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30000
        permitted-number-of-calls-in-half-open-state: 3
  retry:
    instances:
      jsonPlaceholderService:
        max-attempts: 3
        wait-duration: 1000
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
  timelimiter:
    instances:
      jsonPlaceholderService:
        timeout-duration: 10000

# Security settings
security:
  headers:
    frame-options: DENY
    content-type-options: nosniff
    xss-protection: "1; mode=block"
    referrer-policy: strict-origin-when-cross-origin